name: (GKE) Deploy Galaxy on Google Kubernetes Engine
on:
  workflow_dispatch:
    inputs:
      gxyimage:
        description: 'Container image to use with Galaxy-Helm'
        required: true
        default: 'galaxy/galaxy-min'
      gxytag:
        description: 'Container image tag'
        required: true
        default: '21.05'
      clustername:
        description: 'Name of Kubernetes cluster'
        required: true
        default: 'galaxy-on-demand-cluster'
jobs:
  deploygke:
    env:
      GKE_ZONE: us-east1-b
      GKE_VERSION: "1.19"
      GXY_TMP: /tmp/gxy
      PREFIX: gxy-auto
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Create GKE cluster
        run: gcloud container clusters create "${{ github.event.inputs.clustername }}" --cluster-version="$GKE_VERSION" --disk-size=100 --num-nodes=1 --machine-type=n1-highmem-8 --zone "$GKE_ZONE"
      - name: Create two GCP Disks
        run: gcloud compute disks create "${{ github.event.inputs.clustername }}-postgres-pd" --size 10Gi --zone "$GKE_ZONE" && gcloud compute disks create "${{ github.event.inputs.clustername }}-nfs-pd" --size 250Gi --zone "$GKE_ZONE"

  deploygalaxy:
    needs: deploygke
    env:
      GKE_ZONE: us-east1-b
      GXY_TMP: /tmp/gxy
      GKM_VERSION: "1.1.0"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@master
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true
      - name: Get cluster kubeconfig
        run: gcloud container clusters get-credentials "${{ github.event.inputs.clustername }}" --zone "$GKE_ZONE" --project ${{ secrets.GCP_PROJECT_ID }}
      - name: Install Kubectl
        run: curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" && chmod +x ./kubectl && sudo mv ./kubectl /usr/local/bin/kubectl && kubectl version
      - name: Install Helm
        run: curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
      - name: Add anvil repository
        run: helm repo add anvil https://github.com/cloudve/helm-charts/raw/anvil && helm repo update
      - name: Deploy GalaxyKubeMan
        continue-on-error: true
        run: >
          (time sh -c "kubectl create ns ${{ github.event.inputs.clustername }}; helm install -n ${{ github.event.inputs.clustername }} ${{ github.event.inputs.clustername }} anvil/galaxykubeman\
              --wait\
              --timeout 2800s\
              --version $GKM_VERSION\
              --set galaxy.image.repository=\"${{ github.event.inputs.gxyimage }}\"\
              --set galaxy.image.tag=\"${{ github.event.inputs.gxytag }}\"\
              --set nfs.storageClass.name=\"nfs-${{ github.event.inputs.clustername }}\"\
              --set cvmfs.repositories.cvmfs-gxy-data-${{ github.event.inputs.clustername }}=\"data.galaxyproject.org\"\
              --set cvmfs.cache.alienCache.storageClass=\"nfs-${{ github.event.inputs.clustername }}\"\
              --set galaxy.persistence.storageClass=\"nfs-${{ github.event.inputs.clustername }}\"\
              --set galaxy.cvmfs.galaxyPersistentVolumeClaims.data.storageClassName=cvmfs-gxy-data-${{ github.event.inputs.clustername }}\
              --set galaxy.service.type=LoadBalancer\
              --set galaxy.service.port=8000\
              --set rbac.enabled=false\
              --set galaxy.configs.\"file_sources_conf\.yml\"=\"\"\
              --set galaxy.terra.launch.workspace=\"De novo transcriptome reconstruction with RNA-Seq\"\
              --set galaxy.terra.launch.namespace=\"galaxy-anvil-edge\"\
              --set cvmfs.cache.preload.enabled=false\
              --set galaxy.configs.\"galaxy\.yml\".galaxy.master_api_key=${{secrets.COMMON_PASSWORD}}\
              --set galaxy.configs.\"galaxy\.yml\".galaxy.single_user=\"alex@fake.org\"\
              --set galaxy.configs.\"galaxy\.yml\".galaxy.admin_users=\"alex@fake.org\"\
              --set persistence.nfs.name=\"${{ github.event.inputs.clustername }}-nfs-disk\"\
              --set persistence.nfs.persistentVolume.extraSpec.gcePersistentDisk.pdName=\"${{ github.event.inputs.clustername }}-nfs-pd\"\
              --set persistence.nfs.size=\"250Gi\"\
              --set persistence.postgres.name=\"${{ github.event.inputs.clustername }}-postgres-disk\"\
              --set persistence.postgres.persistentVolume.extraSpec.gcePersistentDisk.pdName=\"${{ github.event.inputs.clustername }}-postgres-pd\"\
              --set persistence.postgres.size=\"10Gi\"\
              --set nfs.persistence.existingClaim=\"${{ github.event.inputs.clustername }}-nfs-disk-pvc\"\
              --set nfs.persistence.size=\"250Gi\"\
              --set galaxy.postgresql.persistence.existingClaim=\"${{ github.event.inputs.clustername }}-postgres-disk-pvc\"\
              --set galaxy.persistence.size=\"200Gi\"\
              --set galaxy.postgresql.galaxyDatabasePassword=${{secrets.COMMON_PASSWORD}}\
              --set galaxy.postgresql.master.nodeSelector.\"cloud\.google\.com\/gke-nodepool\"=\"default-pool\"\
              --set galaxy.nodeSelector.\"cloud\.google\.com\/gke-nodepool\"=\"default-pool\"\
              --set cvmfs.nodeSelector.\"cloud\.google\.com\/gke-nodepool\"=\"default-pool\"\
              --set nfs.nodeSelector.\"cloud\.google\.com\/gke-nodepool\"=\"default-pool\"\
              --set galaxy.postgresql.master.nodeSelector.\"cloud\.google\.com\/gke-nodepool\"=\"default-pool\"\
              --set galaxy.configs.\"job_conf\.yml\".runners.k8s.k8s_node_selector=\"cloud.google.com/gke-nodepool: default-pool\"\
              --set galaxy.webHandlers.startupDelay=10\
              --set galaxy.jobHandlers.startupDelay=5\
              --set galaxy.workflowHandlers.startupDelay=0\
              --set nfs.nodeSelector.\"cloud\.google\.com\/gke-nodepool\"=\"default-pool\"") 1> "$GXY_TMP" 2>> "$GXY_TMP"

      - name: Print output
        run: cat "$GXY_TMP"

      - name: Get Galaxy IP and port
        id: gxyservice1
        run: echo "http://$(kubectl get svc -n ${{ github.event.inputs.clustername }} ${{ github.event.inputs.clustername }}-galaxy-nginx -o jsonpath='{.status.loadBalancer.ingress[0].ip}' | sed -e 's/"//g'):$(kubectl get svc -n ${{ github.event.inputs.clustername }} ${{ github.event.inputs.clustername }}-galaxy-nginx -o jsonpath='{.spec.ports[0].port}')$(kubectl get ingress -n ${{ github.event.inputs.clustername }} ${{ github.event.inputs.clustername }}-galaxy -o jsonpath='{.spec.rules[0].http.paths[0].path}')/"
